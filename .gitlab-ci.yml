image: maven

# estÃ¡gios
stages:
  - build
#  - Testes
  - image
  - deploy


# maven
compilacao:
  stage: build
  cache:
    key: target-folder
    policy: push
    paths:
      - ./target
  before_script:
    - java -version
    - mvn -version
    - cat /etc/*-release
    - ls -la
  script:
    - mvn clean package -DskipTests
    - ls -la target

nova_image:
  image: docker
  stage: image
  services:
    - docker:dind
  cache:
    key: target-folder
    policy: pull
    paths:
      - ./target
  before_script:
    - cat /etc/*-release
    - ls -la
  script:
    - docker login registry.gitlab.com -u ${GITLAB_USER} -p ${GITLAB_PASSWOsRD} 
    - docker build -t registry.gitlab.com/aula2020/taskweb .
    - docker images
    - docker push registry.gitlab.com/aula2020/taskweb


deploy_aws_homolog:
  image: docker
  stage: deploy
  services:
    - docker:dind
  before_script:
    - cat /etc/*-release
    - ls -la
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh 
    - eval $(ssh-agent -s)
    - echo "${AWS_SSH_PRIVATE_KEY}" | ssh-add -
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh ubuntu@prod-davesmartins.ddns.net ls -la
    - ssh ubuntu@prod-davesmartins.ddns.net "docker rm -f taskweb-homolg &&  docker login registry.gitlab.com -u ${GITLAB_USER} -p ${GITLAB_PASSWORD} && sudo docker run -d -e SPRING_PROFILES_ACTIVE=homolog -e PORT=80 --name taskweb-homolg -p 80:80 registry.gitlab.com/aula2020/taskweb"
    





    

